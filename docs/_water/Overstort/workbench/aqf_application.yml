#application with context
# server:
#   port: 80

# logging:
#   level:
#     root: WARN
#     be.vlaanderen.informatievlaanderen.ldes.ldio.Application: INFO

orchestrator:
  pipelines:
    - name: observaties-pipeline-raw
      description: "Aquafin observaties JSON message (raw) in using HTTP, OSLO transformation, version creation & HTTP sending."
      input:
        name: Ldio:HttpIn
        adapter:
          name: Ldio:JsonToLdAdapter
          config:
            context: |
              {
                "@context": {
                  "@language": "nl",
                  "adms": "http://www.w3.org/ns/adms#",
                  "qudt-schema": "https://qudt.org/schema/qudt/",
                  "terms": "http://purl.org/dc/terms/",
                  "time": "http://www.w3.org/2006/time#",
                  "skos": "http://www.w3.org/2004/02/skos/core#",
                  "geosparql": "http://www.opengis.net/ont/geosparql#",
                  "qudt-unit": "https://qudt.org/vocab/unit/",
                  "sosa": "http://www.w3.org/ns/sosa/",
                  "xsd": "http://www.w3.org/2001/XMLSchema#",
                  "schema": "https://schema.org",
                  "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
                  "locn": "http://www.w3.org/ns/locn#",
                  "wgs84_pos": "http://www.w3.org/2003/01/geo/wgs84_pos#",
                  "id": "@id",
                  "type": "@type",
                  "Observatie": "sosa:Observation"
                }
              }
      transformers:
        - name: Ldio:SparqlConstructTransformer
          config:
            query: |
              CONSTRUCT {
                GRAPH ?urigemetenAfstand {
                  ?s ?p ?o .
                }
                GRAPH ?uriTemperatuur {
                  ?s_temperatuur ?p_temperatuur ?o_temperatuur .
                }
                GRAPH ?uriDebiet {
                  ?s_debiet ?p_debiet ?o_debiet .
                }
              }
              WHERE { 
                # Define URIs for the named graphs
                BIND (IRI("https://aquafin.be/id/observatie/001/gemetenAfstand/2024-07-29T15:00:00Z") as ?urigemetenAfstand)
                BIND (IRI("https://aquafin.be/id/observatie/001/temperatuur/2024-07-29T15:00:00Z") as ?uriTemperatuur)
                BIND (IRI("https://aquafin.be/id/observatie/001/debiet/2024-07-29T15:00:00Z") AS ?uriDebiet)
                # Block for urigemetenAfstand graph, excluding 'temperatuur' triples
                {
                  ?s ?p ?o .
                  FILTER (
                    !CONTAINS(LCASE(STR(?s)), "temperatuur") &&
                    !CONTAINS(LCASE(STR(?p)), "temperatuur") &&
                    !CONTAINS(LCASE(STR(?o)), "temperatuur") &&
                    !CONTAINS(LCASE(STR(?s)), "debiet") &&
                    !CONTAINS(LCASE(STR(?p)), "debiet") &&
                    !CONTAINS(LCASE(STR(?o)), "debiet")

                  )
                }

                # Block for uriTemperatuur graph, excluding 'gemetenAfstand' triples
                UNION
                {
                  ?s_temperatuur ?p_temperatuur ?o_temperatuur .
                  FILTER (
                    !CONTAINS(LCASE(STR(?s_temperatuur)), "gemetenafstand") &&
                    !CONTAINS(LCASE(STR(?p_temperatuur)), "gemetenafstand") &&
                    !CONTAINS(LCASE(STR(?o_temperatuur)), "gemetenafstand") &&
                    !CONTAINS(LCASE(STR(?s_temperatuur)), "debiet") &&
                    !CONTAINS(LCASE(STR(?p_temperatuur)), "debiet") &&
                    !CONTAINS(LCASE(STR(?o_temperatuur)), "debiet")

                  )
                }
                #Block for uriDebiet graph, excluding 'gemetenafstand' and 'temperatuur' triples
                UNION 
                {
                  ?s_debiet ?p_debiet ?o_debiet . 
                  FILTER(
                    !CONTAINS(LCASE(STR(?s_debiet)), "gemetenafstand") &&
                    !CONTAINS(LCASE(STR(?p_debiet)), "gemetenafstand") &&
                    !CONTAINS(LCASE(STR(?o_debiet)), "gemetenafstand") &&
                    !CONTAINS(LCASE(STR(?s_debiet)), "temperatuur") &&
                    !CONTAINS(LCASE(STR(?p_debiet)), "temperatuur") &&
                    !CONTAINS(LCASE(STR(?o_debiet)), "temperatuur")
                  
                  )
                }
              }
      outputs:
        - name: Ldio:ConsoleOut

    - name: sensordata-pipeline
      description: "Aquafin sensordata JSON message in using HTTP, OSLO transformation, version creation & HTTP sending."
      input:
        name: Ldio:HttpIn
        adapter:
          name: Ldio:JsonToLdAdapter
          config:
            context: |
              {
                "@context": {
                  "@language": "nl",
                  "adms": "http://www.w3.org/ns/adms#"
                }
              }
      transformers:
        - name: Ldio:SparqlConstructTransformer
          config:
            query: |
              CONSTRUCT {
                GRAPH ?uriSensorData {
                  ?s ?p ?o .
                }
              }
              WHERE {
                ?s ?o ?p .
                
              }
      outputs:
        - name: Ldio:ConsoleOut

